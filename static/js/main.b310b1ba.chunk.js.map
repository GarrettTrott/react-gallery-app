{"version":3,"sources":["components/Nav.js","components/SearchForm.js","components/Photo.js","components/Gallery.js","components/NotFound.js","App.js","index.js"],"names":["Nav","className","to","SearchForm","searchPictures","useState","text","setText","history","useHistory","onSubmit","e","preventDefault","push","type","name","placeholder","value","onChange","target","required","fill","height","viewBox","width","xmlns","d","Photo","props","src","url","alt","title","Gallery","data","isLoading","pics","map","pic","key","id","farm","server","secret","length","NotFound","App","searchData","setSearchData","query","setQuery","setIsLoading","skydiving","drums","blacklabs","navData","setNavData","getFlickerData","topic","a","axios","process","result","console","log","Error","useEffect","prevState","photos","photo","getNavData","searchPhotos","search","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b310b1ba.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nfunction Nav() {\n  return (\n    <div>\n      <nav className=\"main-nav\">\n        <ul>\n          <li>\n            <NavLink to=\"/skydiving\">Skydiving</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/drums\">Drums</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/blacklabs\">Blacklabs</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default Nav\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nfunction SearchForm({ searchPictures }) {\n  const [text, setText] = useState('')\n  let history = useHistory()\n\n  const onChange = (e) => {\n    setText(e.target.value)\n  }\n\n  // Submit handler and redirect to home route\n  const onSubmit = (e) => {\n    e.preventDefault()\n    searchPictures(text)\n    setText('')\n    history.push('/')\n  }\n\n  return (\n    <div>\n      <form className=\"search-form\" onSubmit={onSubmit}>\n        <input\n          type=\"search\"\n          name=\"search\"\n          placeholder=\"Search Pictures...\"\n          value={text}\n          onChange={onChange}\n          required\n        />\n        <button type=\"submit\" className=\"search-button\">\n          <svg\n            fill=\"#fff\"\n            height=\"24\"\n            viewBox=\"0 0 23 23\"\n            width=\"24\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          </svg>\n        </button>\n      </form>\n    </div>\n  )\n}\n\nSearchForm.propTypes = {\n  searchPictures: PropTypes.func.isRequired,\n}\n\nexport default SearchForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Photo(props) {\n  return (\n    <li>\n      <img src={props.url} alt={props.title} />\n    </li>\n  )\n}\n\nPhoto.propTypes = {\n  url: PropTypes.string,\n}\n\nexport default Photo\n","import React from 'react'\nimport Photo from './Photo'\nimport PropTypes from 'prop-types'\n\nfunction Gallery({ data, isLoading }) {\n  // Populate gallery with pictures\n  let pics = data.map((pic) => (\n    <Photo\n      key={pic.id}\n      url={`https://farm${pic.farm}.staticflickr.com/${pic.server}/${pic.id}_${pic.secret}.jpg`}\n    />\n  ))\n  // No results\n  if (data.length === 0 && isLoading === false) {\n    return (\n      <div className=\"not-found\">\n        <h2>No Results Found</h2>\n        <h3>You search did not return any results. Please try again.</h3>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"photo-container\">\n        {isLoading ? <h2>Loading...</h2> : <h2>Results</h2>}\n        <ul>{pics}</ul>\n      </div>\n    )\n  }\n}\n\nGallery.propTypes = {\n  data: PropTypes.array,\n  isLoading: PropTypes.bool,\n}\nexport default Gallery\n","import React from 'react'\n\nfunction NotFound() {\n  return (\n    <div className=\"not-found\">\n      <h2>404 Not Found</h2>\n      <h3>Please try another route</h3>\n    </div>\n  )\n}\n\nexport default NotFound\n","\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport axios from 'axios'\n\n// Component imports\nimport Nav from './components/Nav'\nimport SearchForm from './components/SearchForm'\nimport Gallery from './components/Gallery'\nimport NotFound from './components/NotFound'\n\nconst { REACT_APP_API_KEY } = process.env\n\nfunction App() {\n  // Application State\n  const [searchData, setSearchData] = useState([])\n  const [query, setQuery] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [navData, setNavData] = useState({\n    skydiving: [],\n    drums: [],\n    blacklabs: [],\n  })\n\n  const searchPictures = (search) => {\n    setQuery(search)\n  }\n\n  const getFlickerData = async (topic) => {\n    setIsLoading(true)\n    try {\n      const result = await axios(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${REACT_APP_API_KEY}&tags=${topic}&per_page=24&format=json&nojsoncallback=1`\n      )\n      return result\n    } catch (err) {\n      console.log(new Error(err))\n    }\n  }\n\n  // Get API data for navigation links\n  useEffect(() => {\n    const getNavData = async () => {\n      for (const topic in navData) {\n        let result = await getFlickerData(topic)\n        setNavData((prevState) => ({\n          ...prevState,\n          [topic]: result.data.photos.photo,\n        }))\n      }\n      setIsLoading(false)\n    }\n    getNavData()\n    // eslint-disable-next-line\n  }, [])\n\n  // Get photo search query\n  useEffect(() => {\n    const searchPhotos = async (topic) => {\n      let result = await getFlickerData(topic)\n      setSearchData(result.data.photos.photo)\n      setIsLoading(false)\n    }\n    searchPhotos(query)\n  }, [query])\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <SearchForm searchPictures={searchPictures} />\n        <Nav />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Gallery data={searchData} isLoading={isLoading} />}\n          />\n          <Route\n            path=\"/skydiving\"\n            render={() => (\n              <Gallery data={navData.skydiving} isLoading={isLoading} />\n            )}\n          />\n          <Route\n            path=\"/drums\"\n            render={() => (\n              <Gallery data={navData.drums} isLoading={isLoading} />\n            )}\n          />\n          <Route\n            path=\"/blacklabs\"\n            render={() => (\n              <Gallery data={navData.blacklabs} isLoading={isLoading} />\n            )}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}